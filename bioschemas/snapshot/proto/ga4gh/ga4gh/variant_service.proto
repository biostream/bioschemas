syntax = "proto3";

package ga4gh;

import "ga4gh/variants.proto";
import "google/api/annotations.proto";

service VariantService {
  // Gets a list of `VariantSet` matching the search criteria.
  //
  // `POST /variantsets/search` must accept a JSON version of
  // `SearchVariantSetsRequest` as the post body and will return a JSON version
  // of `SearchVariantSetsResponse`.
  rpc SearchVariantSets(SearchVariantSetsRequest)
    returns (SearchVariantSetsResponse) {
      option (google.api.http) = {
        post: "/v0.6.0a8/variantsets/search"
        body: "*"
      };
    };

  // Gets a `VariantSet` by ID.
  //
  // `GET /variantsets/{variant_set_id}` will return a JSON version of
  // `VariantSet`.
  rpc GetVariantSet(GetVariantSetRequest)
    returns (VariantSet) {
      option (google.api.http) = {
        get: "/v0.6.0a8/variantsets/{variant_set_id}"
      };
    };

  // Gets a list of `Variant` matching the search criteria.
  //
  // `POST /variants/search` must accept a JSON version of
  // `SearchVariantsRequest` as the post body and will return a JSON version of
  // `SearchVariantsResponse`.
  rpc SearchVariants(SearchVariantsRequest)
    returns (SearchVariantsResponse) {
      option (google.api.http) = {
        post: "/v0.6.0a8/variants/search"
        body: "*"
      };
    };

  // Gets a `Variant` by ID.
  //
  // `GET /variants/{id}` will return a JSON version of `Variant`.
  rpc GetVariant(GetVariantRequest)
    returns (Variant) {
      option (google.api.http) = {
        post: "/v0.6.0a8/variants/{variant_id}"
      };
    };

  // Gets a list of call sets matching the search criteria.
  //
  // `POST /callsets/search` must accept a JSON version of
  // `SearchCallSetsRequest` as the post body and will return a JSON version of
  // `SearchCallSetsResponse`.
  rpc SearchCallSets(SearchCallSetsRequest)
    returns (SearchCallSetsResponse) {
      option (google.api.http) = {
        post: "/v0.6.0a8/callsets/search"
        body: "*"
      };
    };

  // Gets a `CallSet` by ID.
  //
  // `GET /callsets/{id}` will return a JSON version of `CallSet`.
  rpc GetCallSet(GetCallSetRequest)
    returns (CallSet) {
      option (google.api.http) = {
        get: "/v0.6.0a8/callsets/{call_set_id}"
      };
    };

}

// ******************  /variantsets  *********************
// This request maps to the body of `POST /variantsets/search` as JSON.
message SearchVariantSetsRequest {
  // The `Dataset` to search.
  string dataset_id = 1;

  // Specifies the maximum number of results to return in a single page.
  // If unspecified, a system default will be used.
  int32 page_size = 2;

  // The continuation token, which is used to page through large result sets. To
  // get the next page of results, set this parameter to the value of
  // `next_page_token` from the previous response.
  string page_token = 3;
}

// This is the response from `POST /variantsets/search` expressed as JSON.
message SearchVariantSetsResponse {
  // The list of matching variant sets.
  repeated VariantSet variant_sets = 1;

  // The continuation token, which is used to page through large result sets.
  // Provide this value in a subsequent request to return the next page of
  // results. This field will be empty if there aren't any additional results.
  string next_page_token = 2;
}

// This request maps to the URL `GET /variantsets/{id}`.
message GetVariantSetRequest {
  // The ID of the `VariantSet` to be retrieved.
  string variant_set_id = 1;
}

// ******************  /variants  *********************
// This request maps to the body of `POST /variants/search` as JSON.
message SearchVariantsRequest {
  // The `VariantSet` to search.
  string variant_set_id = 1;

  // Only return variant calls which belong to call sets with these IDs.
  // If unspecified, return all variants and no variant call objects.
  repeated string call_set_ids = 2;

  // Required. Only return variants on this reference.
  string reference_name = 3;

  // Required. The beginning of the window (0-based, inclusive) for
  // which overlapping variants should be returned.
  // Genomic positions are non-negative integers less than reference length.
  // Requests spanning the join of circular genomes are represented as
  // two requests one on each side of the join (position 0).
  int64 start = 4;

  // Required. The end of the window (0-based, exclusive) for which overlapping
  // variants should be returned.
  int64 end = 5;

  // Specifies the maximum number of results to return in a single page.
  // If unspecified, a system default will be used.
  int32 page_size = 6;

  // The continuation token, which is used to page through large result sets.
  // To get the next page of results, set this parameter to the value of
  // `next_page_token` from the previous response.
  string page_token = 7;
}

// This is the response from `POST /variants/search` expressed as JSON.
message SearchVariantsResponse {
  // The list of matching variants.
  // If the `callSetId` field on the returned calls is not present,
  // the ordering of the call sets from a `SearchCallSetsRequest`
  // over the parent `VariantSet` is guaranteed to match the ordering
  // of the calls on each `Variant`. The number of results will also be
  // the same.
  repeated Variant variants = 1;

  // The continuation token, which is used to page through large result sets.
  // Provide this value in a subsequent request to return the next page of
  // results. This field will be empty if there aren't any additional results.
  string next_page_token = 2;
}

// This request maps to the URL `GET /variants/{id}`.
message GetVariantRequest {
  // The ID of the `Variant` to be retrieved.
  string variant_id = 1;
}

// ******************  /callsets  *********************
// This request maps to the body of `POST /callsets/search` as JSON.
message SearchCallSetsRequest {
  // The VariantSet to search.
  string variant_set_id = 1;

  // Only return call sets with this name (case-sensitive, exact match).
  string name = 2;

  // Return only call sets generated from the provided BioSample ID.
  string bio_sample_id = 3;

  // Specifies the maximum number of results to return in a single page.
  // If unspecified, a system default will be used.
  int32 page_size = 4;

  // The continuation token, which is used to page through large result sets.
  // To get the next page of results, set this parameter to the value of
  // `next_page_token` from the previous response.
  string page_token = 5;
}

// This is the response from `POST /callsets/search` expressed as JSON.
message SearchCallSetsResponse {
  // The list of matching call sets.
  repeated CallSet call_sets = 1;

  // The continuation token, which is used to page through large result sets.
  // Provide this value in a subsequent request to return the next page of
  // results. This field will be empty if there aren't any additional results.
  string next_page_token = 2;
}

// This request maps to the URL `GET /callsets/{call_set_id}`.
message GetCallSetRequest {
  // The ID of the `CallSet` to be retrieved.
  string call_set_id = 1;
}
